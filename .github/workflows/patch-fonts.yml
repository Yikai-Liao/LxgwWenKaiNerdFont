name: Patch WenKai Fonts

on:
  schedule:
    - cron: '17 3 * * 1' # 03:17 UTC every Monday (avoiding peak hours & NA/EU concentration)
  workflow_dispatch:

# Avoid concurrent duplicate runs (manual + scheduled triggers)
concurrency:
  group: patch-wenkai-fonts
  cancel-in-progress: false

# Minimal permissions (contents: write required for publishing releases)
permissions:
  contents: write

jobs:
  check-and-patch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need all tags for duplicate detection

      - name: Install dependencies
        run: |
          set -eu
          sudo apt-get update
          sudo apt-get install -y fontforge python3 python3-pip python3-fontforge tree jq unzip

      - name: Get upstream latest version
        id: fetch_release
        env:
          GH_REPO: lxgw/LxgwWenKai
        run: |
          set -euo pipefail
          echo "UTC now: $(date -u '+%Y-%m-%d %H:%M:%S')"
          api_json=$(curl -fsSL https://api.github.com/repos/${GH_REPO}/releases/latest)
          LATEST_RELEASE=$(echo "$api_json" | jq -r .tag_name)
          if [ -z "$LATEST_RELEASE" ] || [ "$LATEST_RELEASE" = "null" ]; then
            echo "Cannot parse latest release tag" >&2
            exit 1
          fi
          echo "Upstream latest tag: $LATEST_RELEASE"
          echo "LATEST_RELEASE=$LATEST_RELEASE" >> $GITHUB_ENV
          echo "latest=$LATEST_RELEASE" >> $GITHUB_OUTPUT

          # Check if current repo already has a release with the same name (avoid duplicates)
          existing_release=$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -fsSL \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/$LATEST_RELEASE || true)
          if echo "$existing_release" | grep -q '"tag_name"'; then
            echo "Release $LATEST_RELEASE already exists in current repo, skip.";
            echo "skip=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Alternative: if release doesn't exist but tag already exists locally (or remotely)
          if git tag --list | grep -qx "$LATEST_RELEASE"; then
            echo "Tag $LATEST_RELEASE already exists (without release), skip.";
            echo "skip=true" >> $GITHUB_OUTPUT
            exit 0
          fi

      - name: Stop early (already processed)
        if: steps.fetch_release.outputs.skip == 'true'
        run: echo "Nothing new, exiting early."

      - name: Download fonts and show structure
        if: steps.fetch_release.outputs.skip != 'true'
        run: |
          set -euo pipefail
          mkdir -p fonts
          wget -q -O fonts/lxgw-wenkai.tar.gz https://github.com/lxgw/LxgwWenKai/releases/download/$LATEST_RELEASE/lxgw-wenkai-$LATEST_RELEASE.tar.gz
          tar -xzvf fonts/lxgw-wenkai.tar.gz -C fonts
          tree fonts -L 2 || true

      - name: Set up Font Patcher
        if: steps.fetch_release.outputs.skip != 'true'
        run: |
          set -euo pipefail
          wget -q -O FontPatcher.zip https://github.com/ryanoasis/nerd-fonts/releases/latest/download/FontPatcher.zip
          unzip -q FontPatcher.zip -d FontPatcher
          chmod +x FontPatcher/font-patcher

      - name: Patch fonts
        if: steps.fetch_release.outputs.skip != 'true'
        run: |
          set -euo pipefail
          mkdir patched-fonts
          for font in fonts/**/*.ttf; do
            echo "Processing: $font"
            ./FontPatcher/font-patcher --complete --quiet --careful "$font" -o patched-fonts/
          done

      - name: Package fonts
        if: steps.fetch_release.outputs.skip != 'true'
        run: |
          set -euo pipefail
          mv patched-fonts lxgw-wenkai-nerd
          tar -czvf lxgw-wenkai-nerd.tar.gz -C lxgw-wenkai-nerd .
          zip -qr lxgw-wenkai-nerd.zip lxgw-wenkai-nerd
          ls -lh lxgw-wenkai-nerd.* || true

      - name: Build asset file list
        if: steps.fetch_release.outputs.skip != 'true'
        id: assets
        run: |
          set -euo pipefail
          printf '%s\n' \
            lxgw-wenkai-nerd.tar.gz \
            lxgw-wenkai-nerd.zip > asset-files.txt
          echo "Final asset list:"; cat asset-files.txt
          echo 'files<<EOF' >> $GITHUB_OUTPUT
          cat asset-files.txt >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Create release
        if: steps.fetch_release.outputs.skip != 'true'
        id: release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.fetch_release.outputs.latest }}
          name: v${{ steps.fetch_release.outputs.latest }}
          body: |
            Release v${{ steps.fetch_release.outputs.latest }} - LxgwWenKai Nerd Font

            This release includes all 6 font variants (Light, Regular, Medium Ã— Proportional, Monospace) patched with Nerd Fonts.

            Font files:
            - LXGWWenKaiNerdFont-Light.ttf
            - LXGWWenKaiNerdFont-Regular.ttf  
            - LXGWWenKaiNerdFont-Medium.ttf
            - LXGWWenKaiMonoNerdFont-Light.ttf
            - LXGWWenKaiMonoNerdFont-Regular.ttf
            - LXGWWenKaiMonoNerdFont-Medium.ttf

            Based on LxgwWenKai v${{ steps.fetch_release.outputs.latest }}
          files: |
            lxgw-wenkai-nerd.zip
            lxgw-wenkai-nerd.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger AUR publishing
        if: steps.fetch_release.outputs.skip != 'true'
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github.everest-preview+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{
              "event_type": "aur-publish",
              "client_payload": {
                "tag_name": "v${{ steps.fetch_release.outputs.latest }}",
                "release_url": "https://github.com/${{ github.repository }}/releases/tag/v${{ steps.fetch_release.outputs.latest }}"
              }
            }'
